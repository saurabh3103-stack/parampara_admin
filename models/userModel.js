const mongoose = require('mongoose');

const userSchema = new mongoose.Schema({
  username: { type: String, required: true },
  email: { type: String, required: true, unique: true },
  mobile: { type: String, required: true, unique: true },
  address: { type: String },
  longitude: { type: Number },
  latitude: { type: Number },
  password: { type: String, required: true },
  alternate_no: { type: String },
  gender: { type: String, enum: ['male', 'female', 'other'] },
  city: { type: String },
  state: { type: String },
  flat: { type: String },
  landmark: { type: String },
  social_type: { type: String, enum: ['google', 'facebook', 'other'] },
  social_id: { type: String },
  image: { type: String },
  aadhar_no: { type: String },
  aadhar_image: { type: String },
  dob: { type: Date },
  country: { type: String },
  pincode: { type: String },
  skills: [{ type: String }],
  account_type: { type: String, enum: ['personal', 'business', 'other'] },
  pancard_no: { type: String },
  degree: { type: String },
  bank_ac_no: { type: String },
  experience: { type: Number },
  ifsc_code: { type: String },
  acc_holder_name: { type: String },
  bank_name: { type: String },
  bio: { type: String },
  type: { type: String, enum: ['customer', 'service_provider', 'admin'] },
  status: { type: String, enum: ['active', 'inactive', 'suspended'], default: 'active' },
  register_id: { type: String },
  pooja: { type: Boolean, default: false },
  otp: { type: String },
  otp_verified: { type: Boolean, default: false },
  approved: { type: Boolean, default: false },
  approved_by_admin: { type: Boolean, default: false },
  entrydt: { type: Date, default: Date.now },
  kundali_status: { type: Boolean, default: false },
  paramars_status: { type: Boolean, default: false },
  poojabooking_status: { type: Boolean, default: false },
  ayojanbooking_status: { type: Boolean, default: false },
  mandalbooking_status: { type: Boolean, default: false },
});

module.exports = mongoose.model('User', userSchema);
